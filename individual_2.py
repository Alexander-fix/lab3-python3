#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Вариант: (N + mod 23) + 1 = 7
# Задание: Провести исследование биквадратного уравнения,
# где а, b и c - действительные числа. Если действительный корней нет, об этом
# должно быть выдано сообщение, иначе должны быть виданы 2 или 4 действительных
# корня.

import math
import sys

if __name__ == '__main__':
    print("Введите коэффициенты для уравнения")
    # Ввод значений переменных с клавиатуры
    a = float(input("a = "))
    if a == 0:
        print("В данном уравнении a не может быть равно нулю", file=sys.stderr)
        exit(1)
    b = float(input("b = "))
    c = float(input("c = "))

    D = b ** 2 - 4 * a * c      # Нахождение дискриминанта

    # Задано биквадратное уравнение, используем подстановку.
    # При дискриминанте больше нуля вычисляются значения t1 и t2.
    if D > 0:
        t1 = (-b + math.sqrt(D)) / (2 * a)
        t2 = (-b - math.sqrt(D)) / (2 * a)
        # При t1 и t2 меньше нуля корней нет.
        if t1 < 0 and t2 < 0:
            print("Корней нет")
        # Одно из значений t1 или t2 меньше нуля
        # Выводится квадратный корень только ненулевого значения.
        elif t1 < 0:
            print("Найденные корни уравнения:", math.sqrt(t2), -math.sqrt(t2))
        elif t2 < 0:
            print("Найденные корни уравнения:", math.sqrt(t1), -math.sqrt(t1))
        else:
            print("Найденные корни уравнения:", math.sqrt(t1), -math.sqrt(t1),
                  math.sqrt(t2), -math.sqrt(t2))
    # При нулевом дискриминанте вычисляется значение t
    # Выводится его квадратный корень.
    elif D == 0:
        t = -b / (2 * a)
        # В случае, если значение t меньше нуля, корней нет
        if t < 0:
            print("Корней нет")
        # При нулевом t оно выводится на экран
        elif t == 0:
            print("Найденные корни уравнения:", t)
        else:
            print("Найденные корни уравнения:", math.sqrt(t), -math.sqrt(t))
    # В остальных случаях корней нет
    else:
        print("Корней нет")
